import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

// Standart sekt√∂r listesi
const STANDARD_SECTORS = [
  'ENERJƒ∞',
  'ƒ∞N≈ûAAT', 
  'SANAYƒ∞',
  'ELEKTRƒ∞K - ELEKTRONƒ∞K',
  'OTOMOTƒ∞V',
  'TEKSTƒ∞L',
  'GIDA',
  'Hƒ∞ZMET',
  'END√úSTRƒ∞YEL SANAYƒ∞',
  'TELEKOM√úNƒ∞KASYON',
  'MOBƒ∞LYA',
  'YEMEK',
  '√ñƒûRETƒ∞M',
  'Tƒ∞CARET',
  'ƒ∞MALAT',
  'Gƒ∞Yƒ∞M',
  'Hƒ∞ZMET - GAYRIMENKUL',
  'TEK SEKT√ñR',
  'GERƒ∞ D√ñN√ú≈û√úM',
  'D√úƒû√úN DAVET'
]

// Sekt√∂r e≈üle≈ütirme haritasƒ±
const SECTOR_MAPPING: { [key: string]: string } = {
  'ƒ∞N≈ûAAT': 'ƒ∞N≈ûAAT',
  'SANAYƒ∞': 'SANAYƒ∞',
  'ELEKTRƒ∞K - ELEKTRONƒ∞K': 'ELEKTRƒ∞K - ELEKTRONƒ∞K',
  'Hƒ∞ZMET': 'Hƒ∞ZMET',
  'ƒ∞MALAT': 'ƒ∞MALAT',
  'OTOMOTƒ∞V': 'OTOMOTƒ∞V',
  'TEKSTƒ∞L': 'TEKSTƒ∞L',
  'GIDA': 'GIDA',
  'ENERJƒ∞': 'ENERJƒ∞',
  'END√úSTRƒ∞YEL SANAYƒ∞ - ENERJƒ∞': 'ENERJƒ∞',
  'D√úƒû√úN DAVET - OTOMOTƒ∞V': 'OTOMOTƒ∞V',
  'Hƒ∞ZMET - GAYRƒ∞MENKUL': 'Hƒ∞ZMET - GAYRIMENKUL',
  'TELEKOMƒ∞Nƒ∞KASYON': 'TELEKOM√úNƒ∞KASYON',
  'END√úSTRƒ∞YEL SANAYƒ∞': 'END√úSTRƒ∞YEL SANAYƒ∞',
  'MOBƒ∞LYA': 'MOBƒ∞LYA',
  'GERƒ∞ D√ñN√ú≈û√úM': 'GERƒ∞ D√ñN√ú≈û√úM',
  'TEK SEKT√ñR': 'TEK SEKT√ñR',
  'Gƒ∞Yƒ∞M': 'Gƒ∞Yƒ∞M',
  'Tƒ∞CARET': 'Tƒ∞CARET',
  '√úRETƒ∞M': 'ƒ∞MALAT',
  'YEMEK': 'YEMEK'
}

async function main() {
  console.log('üîÑ Sekt√∂rler standartla≈ütƒ±rƒ±lƒ±yor...')

  try {
    const members = await prisma.member.findMany()

    let updatedCount = 0

    for (const member of members) {
      if (member.sector && member.sector.trim() !== '') {
        const currentSector = member.sector.trim()
        const standardSector = SECTOR_MAPPING[currentSector] || currentSector

        if (currentSector !== standardSector) {
          await prisma.member.update({
            where: { id: member.id },
            data: { sector: standardSector }
          })
          console.log(`‚úÖ ${member.firstName} ${member.lastName}: "${currentSector}" ‚Üí "${standardSector}"`)
          updatedCount++
        }
      } else {
        // Sekt√∂r bilgisi olmayan √ºyelere varsayƒ±lan sekt√∂r ata
        await prisma.member.update({
          where: { id: member.id },
          data: { sector: 'Hƒ∞ZMET' }
        })
        console.log(`‚ûï ${member.firstName} ${member.lastName}: Sekt√∂r bilgisi eklendi (Hƒ∞ZMET)`)
        updatedCount++
      }
    }

    console.log(`\nüéâ ${updatedCount} √ºyenin sekt√∂r bilgisi g√ºncellendi!`)

    // G√ºncellenmi≈ü sekt√∂r daƒüƒ±lƒ±mƒ±nƒ± g√∂ster
    const updatedMembers = await prisma.member.findMany({
      select: { sector: true }
    })

    const sectorGroups: { [key: string]: number } = {}
    updatedMembers.forEach(member => {
      if (member.sector) {
        sectorGroups[member.sector] = (sectorGroups[member.sector] || 0) + 1
      }
    })

    console.log('\nüìä G√ºncellenmi≈ü Sekt√∂r Daƒüƒ±lƒ±mƒ±:')
    Object.entries(sectorGroups)
      .sort(([,a], [,b]) => b - a)
      .forEach(([sector, count]) => {
        console.log(`  ${sector}: ${count} √ºye`)
      })

  } catch (error) {
    console.error('‚ùå Hata:', error)
  } finally {
    await prisma.$disconnect()
  }
}

main()
