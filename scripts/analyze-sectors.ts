import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('üìä Sekt√∂r analizi yapƒ±lƒ±yor...')

  try {
    const members = await prisma.member.findMany({
      select: {
        id: true,
        firstName: true,
        lastName: true,
        sector: true
      }
    })

    console.log(`\nüìã Toplam ${members.length} √ºye bulundu`)

    // Sekt√∂rleri grupla
    const sectorGroups: { [key: string]: number } = {}
    const membersWithoutSector: any[] = []

    members.forEach(member => {
      if (!member.sector || member.sector.trim() === '') {
        membersWithoutSector.push(member)
      } else {
        const sector = member.sector.trim()
        sectorGroups[sector] = (sectorGroups[sector] || 0) + 1
      }
    })

    console.log('\nüè≠ Sekt√∂r Daƒüƒ±lƒ±mƒ±:')
    Object.entries(sectorGroups)
      .sort(([,a], [,b]) => b - a)
      .forEach(([sector, count]) => {
        console.log(`  ${sector}: ${count} √ºye`)
      })

    console.log(`\n‚ùå Sekt√∂r bilgisi olmayan √ºyeler (${membersWithoutSector.length}):`)
    membersWithoutSector.forEach(member => {
      console.log(`  - ${member.firstName} ${member.lastName}`)
    })

    // Standart sekt√∂r listesi √∂ner
    const allSectors = Object.keys(sectorGroups)
    const standardSectors = [
      'ENERJƒ∞',
      'ƒ∞N≈ûAAT', 
      'SANAYƒ∞',
      'ELEKTRƒ∞K - ELEKTRONƒ∞K',
      'OTOMOTƒ∞V',
      'TEKSTƒ∞L',
      'GIDA',
      'Hƒ∞ZMET',
      'END√úSTRƒ∞YEL SANAYƒ∞',
      'TELEKOM√úNƒ∞KASYON',
      'MOBƒ∞LYA',
      'YEMEK',
      '√ñƒûRETƒ∞M',
      'Tƒ∞CARET',
      'ƒ∞MALAT',
      'Gƒ∞Yƒ∞M',
      'Hƒ∞ZMET - GAYRIMENKUL',
      'TEK SEKT√ñR',
      'GERƒ∞ D√ñN√ú≈û√úM',
      'D√úƒû√úN DAVET'
    ]

    console.log('\nüéØ √ñnerilen Standart Sekt√∂r Listesi:')
    standardSectors.forEach(sector => {
      console.log(`  - ${sector}`)
    })

  } catch (error) {
    console.error('‚ùå Hata:', error)
  } finally {
    await prisma.$disconnect()
  }
}

main()
